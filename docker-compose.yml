version: '3.9'

services:
 api-service: 
   container_name: api-container-1
   build:
    context: ./
    dockerfile: Dockerfile 
   environment:
    API_TITLE: Api docs dev
   ports:
    - 8060:8080
   networks:
    - backend
 postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toan2002
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    

#  api-service-test: 
#    container_name: api-container-2
#    build:
#     context: ./
#     dockerFile: Dockerfile 
#    ports:
#     - 8070:8080
#    networks:
#     - backend
#  api-service-prod: 
#    container_name: api-container-3
#    image: api-image-sample 
#    ports:
#     - 8090:8080
#    networks:
#     - backend
 redis:
   image: redis:6.2-alpine
   container_name: redis
   hostname: redis
   ports:
     - '6379:6379'
   environment: 
     - ALLOW_EMPTY_PASSWORD=yes
     - REDIS_DISABLE_COMMANDS=FLUSHDB;FLUSHALL
   networks:
     - backend
 zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'
 kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
networks:
 backend:
  driver: bridge